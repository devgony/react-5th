// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  username      String          @unique
  password      String
  email         String          @unique
  bio           String?
  photo         String?
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  Tweet         Tweet[]
  Like          Like[]
  Response      Response[]
  ChatRoom      ChatRoom[]
  Message       Message[]
  MessageReadBy MessageReadBy[]
}

model Tweet {
  id         Int        @id @default(autoincrement())
  title      String
  content    String
  photo      String?
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  user       User       @relation(fields: [userId], references: [id])
  userId     Int
  Like       Like[]
  Response   Response[]
}

model Like {
  created_at DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  tweet      Tweet    @relation(fields: [tweetId], references: [id])
  userId     Int
  tweetId    Int

  @@id(name: "id", [userId, tweetId])
}

model Response {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  tweet      Tweet    @relation(fields: [tweetId], references: [id])
  payload    String
  userId     Int
  tweetId    Int
  created_at DateTime @default(now())
}

model ChatRoom {
  id    String @id @default(cuid())
  users User[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  messages   Message[]
}

model Message {
  id      Int    @id @default(autoincrement())
  payload String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  room            ChatRoom        @relation(fields: [chatRoomId], references: [id])
  chatRoomId      String
  user            User            @relation(fields: [userId], references: [id])
  userId          Int
  message_read_by MessageReadBy[]
}

model MessageReadBy {
  message   Message  @relation(fields: [messageId], references: [id])
  messageId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  readAt    DateTime @default(now())

  @@id(name: "id", [messageId, userId])
}
